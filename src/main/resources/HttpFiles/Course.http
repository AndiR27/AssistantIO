@host = http://localhost:8088
@base = {{host}}/course
@courseId = 1
@studentId = 1

###
# 1) Get Course by ID
# GET /course/{courseId}
###
GET {{base}}/{{courseId}}
Accept: application/json

###
# 2) Add Student to Course
# POST /course/{courseId}/addStudent
#http://localhost:8088/course/1/addStudent
###
POST {{base}}/{{courseId}}/addStudent
Content-Type: application/json

{
  "id": null,
  "name": "Alice Dupont",
  "email": "alice.dupont@example.com",
  "studyType": "temps_plein",
  "courseStudentList": []
}

###
# 3) Get All Students in Course
# GET /course/{courseId}/students
###
GET {{base}}/{{courseId}}/students
Accept: application/json

###
# 4) Remove Student from Course
# DELETE /course/{courseId}/removeStudent/{studentId}
# replace {{studentId}} with the actual ID
###
DELETE {{base}}/{{courseId}}/removeStudent/{{studentId}}
Accept: application/json

###
# 5) Add Students from TXT File
# POST /course/{courseId}/addStudentsFromFile
###
POST {{base}}/{{courseId}}/addStudentsFromFile
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file"; filename="TestAddEtudiantsTxt.txt"
Content-Type: text/plain

file=@../../../src/test/resources/TestAddEtudiantsTxt.txt;type=text/plain
------WebKitFormBoundary7MA4YWxkTrZu0gW--

###
# 6) Add TP to Course
# POST /course/{courseId}/addTP/{tpNumber}
###
POST {{base}}/{{courseId}}/addTP/1
Accept: application/json

###
# 7) Get All TPs in Course
# GET /course/{courseId}/tps
###
GET {{base}}/{{courseId}}/tps
Accept: application/json

###
# 8) Example TP_DTO returned
# (for reference: id, no, course, submission, statusStudents)
###
# GET {{base}}/{{courseId}}/tps
# Response sample:
# [
#   {
#     "id": 42,
#     "no": 1,
#     "course": { "id": 1, /*...*/ },
#     "submission": null,
#     "statusStudents": []
#   }
# ]

###
# 9) Add Exam to Course
# POST /course/{courseId}/addExam
###
POST {{base}}/{{courseId}}/addExam
Content-Type: application/json

{
  "id": null,
  "name": "Examen Final",
  "date": "2025-06-15T10:00:00",
  "submission": null
}

###
# 10) Add Continuous Assessment to Course
# POST /course/{courseId}}/addCC
###
POST {{base}}/{{courseId}}/addCC
Content-Type: application/json

{
  "id": null,
  "name": "CC1",
  "date": "2025-05-20T09:00:00",
  "submission": null
}

###
# 11) Add a Submission to a TP in the Course
# POST /course/{courseId}/addRendu/{tpNo}
###
POST {{base}}/{{courseId}}/addRendu/1
Content-Type: multipart/form-data; boundary=---011000010111000001101001

---011000010111000001101001
Content-Disposition: form-data; name="file"; filename="test_zip.zip"
Content-Type: application/zip

< D:/AssistannatProg/AssistantIO/src/test/resources/mockinginputstreams/test_zip.zip
---011000010111000001101001--

