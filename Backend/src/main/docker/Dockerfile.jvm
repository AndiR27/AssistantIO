#########################################
# Étape 1 : build de Quarkus
#########################################
# Utiliser un JDK 21 pour matcher le release dans pom.xml
FROM maven:3.9.8-eclipse-temurin-21 AS build
WORKDIR /usr/src/app

# Pré-cache des dépendances Maven
COPY pom.xml .
RUN mvn dependency:go-offline -B

# Copier le code Quarkus
COPY src src

# Compiler Quarkus en fast-jar
#RUN mvn package -Dquarkus.package.type=fast-jar -Dquarkus.native.container-build=false -Dquarkus.native.additional-build-args=--enable-http2 -Dquarkus.native.additional-build-args=--enable-https -Dquarkus.native.additional-build-args=--enable-http3 -Dquarkus.native.additional-build-args=--enable-quic -Dquarkus.native.additional-build-args=--enable-websockets -Dquarkus.quinoa=false
RUN mvn package -Dquarkus.profile=prod

#########################################
# Étape 2 : image de runtime
#########################################
# Utiliser une image JRE basée sur Alpine pour légèreté et disponibilité
FROM eclipse-temurin:21-jre-alpine AS runtime
WORKDIR /work

# Copier l'application Quarkus packagée
COPY --from=build /usr/src/app/target/quarkus-app/lib/       ./lib
COPY --from=build /usr/src/app/target/quarkus-app/*.jar      ./
COPY --from=build /usr/src/app/target/quarkus-app/app/       ./app
COPY --from=build /usr/src/app/target/quarkus-app/quarkus/   ./quarkus

EXPOSE 8088
CMD ["java","-jar","quarkus-run.jar"]

